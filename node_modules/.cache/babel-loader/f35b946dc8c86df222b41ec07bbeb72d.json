{"ast":null,"code":"var _jsxFileName = \"/Users/juliohernandez/projects/day_21/book-search/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport Results from './Results';\nexport default class SearchBar extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const searchValue = document.getElementById('search').value;\n      console.log(searchValue);\n      this.setState({\n        loading: true,\n        filter: {\n          printType: document.getElementById('print-type-select').value,\n          bookType: document.getElementById('book-type-select').value\n        }\n      });\n      this.fetchBooks(searchValue, this.state.filter); // ResultsContainer(this.state.books);\n    };\n\n    this.fetchBooks = searchValue => {\n      let printType = this.state.filter.printType;\n      let bookType = this.state.filter.bookType;\n      let newBooks = [];\n      fetch(\"https://www.googleapis.com/books/v1/volumes?q=\".concat(searchValue, \"&printType=\").concat(printType).concat(bookType !== 'No Filter' ? \"&filter=\".concat(bookType) : '')).then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          Promise.reject('Aaargh');\n        }\n      }).then(books => {\n        if (books.items) {\n          newBooks = books.items.map(book => {\n            return {\n              title: book.volumeInfo.title,\n              authors: book.volumeInfo.authors,\n              description: book.volumeInfo.description,\n              price: book.saleInfo.listPrice ? book.saleInfo.listPrice.amount : null,\n              link: book.canonicalVolumeLink\n            };\n          });\n        } else {\n          alert('aaaarrgh');\n        }\n\n        this.setState({\n          books: newBooks\n        });\n      }).then(() => this.state.books.forEach(item => console.log(item)) // console.log('this.state.books[0].title: ' + this.state.books[0].title)\n      ).catch(e => console.log(e));\n    };\n\n    this.state = {\n      books: [],\n      loading: false,\n      error: null,\n      filter: {\n        printType: 'all',\n        bookType: 'ebooks'\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"book-search\",\n      onSubmit: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Search:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"search\",\n      id: \"search\",\n      placeholder: \"Search for a book\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/juliohernandez/projects/day_21/book-search/src/components/SearchBar.js"],"names":["React","Component","Results","SearchBar","constructor","handleSubmit","e","preventDefault","searchValue","document","getElementById","value","console","log","setState","loading","filter","printType","bookType","fetchBooks","state","newBooks","fetch","then","res","ok","json","Promise","reject","books","items","map","book","title","volumeInfo","authors","description","price","saleInfo","listPrice","amount","link","canonicalVolumeLink","alert","forEach","item","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Results from './Results'\n\nexport default class SearchBar extends Component {\n    constructor() {\n      super();\n      this.state = {\n        books: [],\n        loading: false,\n        error: null,\n        filter: {\n          printType: 'all',\n          bookType: 'ebooks',\n        },\n      };\n    }\n    handleSubmit = e => {\n      e.preventDefault();\n      const searchValue = document.getElementById('search').value;\n      console.log(searchValue);\n      this.setState({\n        loading: true,\n        filter: {\n          printType: document.getElementById('print-type-select').value,\n          bookType: document.getElementById('book-type-select').value,\n        },\n      });\n      this.fetchBooks(searchValue, this.state.filter);\n      // ResultsContainer(this.state.books);\n    };\n    fetchBooks = searchValue => {\n      let printType = this.state.filter.printType;\n      let bookType = this.state.filter.bookType;\n      let newBooks = [];\n      fetch(\n        `https://www.googleapis.com/books/v1/volumes?q=${searchValue}&printType=${printType}${\n          bookType !== 'No Filter' ? `&filter=${bookType}` : ''\n        }`\n      )\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            Promise.reject('Aaargh');\n          }\n        })\n        .then(books => {\n          if (books.items) {\n            newBooks = books.items.map(book => {\n              return {\n                title: book.volumeInfo.title,\n                authors: book.volumeInfo.authors,\n                description: book.volumeInfo.description,\n                price: book.saleInfo.listPrice\n                  ? book.saleInfo.listPrice.amount\n                  : null,\n                link: book.canonicalVolumeLink,\n              };\n            });\n          } else {\n            alert('aaaarrgh');\n          }\n          this.setState({\n            books: newBooks,\n          });\n        })\n        .then(\n          () => this.state.books.forEach(item => console.log(item))\n          // console.log('this.state.books[0].title: ' + this.state.books[0].title)\n        )\n        .catch(e => console.log(e));\n    };\n    render() {\n      return (\n        <form id='book-search' onSubmit={e => this.handleSubmit(e)}>\n          <label htmlFor='search'>Search:</label>\n          <input\n            type='text'\n            name='search'\n            id='search'\n            placeholder='Search for a book'\n          />\n          <button type='submit'>Search</button>\n        </form>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}