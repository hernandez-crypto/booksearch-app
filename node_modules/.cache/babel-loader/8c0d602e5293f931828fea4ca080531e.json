{"ast":null,"code":"import _defineProperty from \"/Users/juliohernandez/projects/day_21/book-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/juliohernandez/projects/day_21/book-search/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Search from './components/Search';\nimport Results from './components/Results';\n\nclass BookSearchApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      store: [],\n      form: {\n        searchParameter: null,\n        printType: 'all',\n        bookType: 'noFilter'\n      }\n    };\n\n    this.fetchData = () => {\n      const URL = 'https://www.googleapis.com/books/v1/volumes?';\n      let endUrl = [];\n\n      if (this.state.form.searchParameter) {\n        endUrl.push(\"q={\".concat(this.state.form.searchParameter, \"}\"));\n        endUrl.push(\"printType=\".concat(this.state.form.printType));\n\n        if (this.state.form.bookType !== 'noFilter') {\n          endUrl.push(\"filter=\".concat(this.state.form.bookType));\n        }\n\n        let finalUrl = endUrl.join('&');\n        fetch(URL + finalUrl).then(res => {\n          return res.json();\n        }).then(res => {\n          if (res.error) {\n            throw res;\n          }\n\n          if (res.totalItems === 0) {\n            this.setState({\n              error: 'No items found'\n            });\n            return [];\n          } else {\n            const newData = res.items.map(book => {\n              return {\n                title: book.volumeInfo.title,\n                author: book.volumeInfo.authors ? book.volumeInfo.authors.join(' ') : 'No Author Information',\n                price: book.saleInfo.listPrice ? book.saleInfo.listPrice.amount : 0,\n                description: book.volumeInfo.description,\n                thumbnail: book.volumeInfo.imageLinks.smallThumbnail\n              };\n            });\n            return newData;\n          }\n        }).then(data => {\n          this.setState({\n            store: data\n          });\n        });\n      }\n    };\n\n    this.search = event => {\n      event.preventDefault();\n\n      let newForm = _objectSpread({}, this.state.form);\n\n      newForm.searchParameter = event.target[0].value;\n      event.target[0].value = '';\n      this.setState({\n        form: newForm\n      }, () => this.fetchData());\n    };\n\n    this.changeFilter = (type, value) => {\n      let changedForm = _objectSpread({}, this.state.form);\n\n      changedForm[type] = value;\n      this.setState({\n        form: changedForm\n      }, () => this.fetchData());\n    };\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Google Book Search\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.error), React.createElement(Search, {\n      form: this.state.form,\n      changeFilter: this.changeFilter,\n      search: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Results, {\n      store: this.state.store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BookSearchApp;","map":{"version":3,"sources":["/Users/juliohernandez/projects/day_21/book-search/src/App.js"],"names":["React","Search","Results","BookSearchApp","Component","state","store","form","searchParameter","printType","bookType","fetchData","URL","endUrl","push","finalUrl","join","fetch","then","res","json","error","totalItems","setState","newData","items","map","book","title","volumeInfo","author","authors","price","saleInfo","listPrice","amount","description","thumbnail","imageLinks","smallThumbnail","data","search","event","preventDefault","newForm","target","value","changeFilter","type","changedForm","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE;AACJC,QAAAA,eAAe,EAAE,IADb;AAEJC,QAAAA,SAAS,EAAE,KAFP;AAGJC,QAAAA,QAAQ,EAAE;AAHN;AAFA,KADkC;;AAAA,SAU1CC,SAV0C,GAU9B,MAAM;AAChB,YAAMC,GAAG,GAAG,8CAAZ;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAI,KAAKR,KAAL,CAAWE,IAAX,CAAgBC,eAApB,EAAqC;AACnCK,QAAAA,MAAM,CAACC,IAAP,cAAkB,KAAKT,KAAL,CAAWE,IAAX,CAAgBC,eAAlC;AACAK,QAAAA,MAAM,CAACC,IAAP,qBAAyB,KAAKT,KAAL,CAAWE,IAAX,CAAgBE,SAAzC;;AACA,YAAI,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,QAAhB,KAA6B,UAAjC,EAA6C;AAC3CG,UAAAA,MAAM,CAACC,IAAP,kBAAsB,KAAKT,KAAL,CAAWE,IAAX,CAAgBG,QAAtC;AACD;;AACD,YAAIK,QAAQ,GAAGF,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAf;AACAC,QAAAA,KAAK,CAACL,GAAG,GAAGG,QAAP,CAAL,CACGG,IADH,CACQC,GAAG,IAAI;AACX,iBAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,SAHH,EAIGF,IAJH,CAIQC,GAAG,IAAI;AACX,cAAIA,GAAG,CAACE,KAAR,EAAe;AACb,kBAAMF,GAAN;AACD;;AACD,cAAIA,GAAG,CAACG,UAAJ,KAAmB,CAAvB,EAA0B;AACxB,iBAAKC,QAAL,CAAc;AACZF,cAAAA,KAAK,EAAE;AADK,aAAd;AAGA,mBAAO,EAAP;AACD,WALD,MAKO;AACL,kBAAMG,OAAO,GAAGL,GAAG,CAACM,KAAJ,CAAUC,GAAV,CAAcC,IAAI,IAAI;AACpC,qBAAO;AACLC,gBAAAA,KAAK,EAAED,IAAI,CAACE,UAAL,CAAgBD,KADlB;AAELE,gBAAAA,MAAM,EAAGH,IAAI,CAACE,UAAL,CAAgBE,OAAhB,GAA0BJ,IAAI,CAACE,UAAL,CAAgBE,OAAhB,CAAwBf,IAAxB,CAA6B,GAA7B,CAA1B,GAA8D,uBAFlE;AAGLgB,gBAAAA,KAAK,EAAGL,IAAI,CAACM,QAAL,CAAcC,SAAd,GAA0BP,IAAI,CAACM,QAAL,CAAcC,SAAd,CAAwBC,MAAlD,GAA2D,CAH9D;AAILC,gBAAAA,WAAW,EAAET,IAAI,CAACE,UAAL,CAAgBO,WAJxB;AAKLC,gBAAAA,SAAS,EAAEV,IAAI,CAACE,UAAL,CAAgBS,UAAhB,CAA2BC;AALjC,eAAP;AAOD,aARe,CAAhB;AASA,mBAAOf,OAAP;AACD;AACF,SAzBH,EA0BGN,IA1BH,CA0BQsB,IAAI,IAAI;AACZ,eAAKjB,QAAL,CAAc;AACZjB,YAAAA,KAAK,EAAEkC;AADK,WAAd;AAGD,SA9BH;AA+BD;AACF,KApDyC;;AAAA,SAsD1CC,MAtD0C,GAsDhCC,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACC,cAAN;;AAEA,UAAIC,OAAO,qBAAQ,KAAKvC,KAAL,CAAWE,IAAnB,CAAX;;AACAqC,MAAAA,OAAO,CAACpC,eAAR,GAA0BkC,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBC,KAA1C;AACAJ,MAAAA,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBC,KAAhB,GAAwB,EAAxB;AAEA,WAAKvB,QAAL,CAAc;AACZhB,QAAAA,IAAI,EAAEqC;AADM,OAAd,EAEG,MAAM,KAAKjC,SAAL,EAFT;AAGD,KAhEyC;;AAAA,SAkE1CoC,YAlE0C,GAkE3B,CAACC,IAAD,EAAOF,KAAP,KAAiB;AAC9B,UAAIG,WAAW,qBAAQ,KAAK5C,KAAL,CAAWE,IAAnB,CAAf;;AACA0C,MAAAA,WAAW,CAACD,IAAD,CAAX,GAAoBF,KAApB;AAEA,WAAKvB,QAAL,CAAc;AACZhB,QAAAA,IAAI,EAAE0C;AADM,OAAd,EAEG,MAAM,KAAKtC,SAAL,EAFT;AAGD,KAzEyC;AAAA;;AA2E1CuC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK7C,KAAL,CAAWgB,KAAhB,CAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWE,IAAzB;AAA+B,MAAA,YAAY,EAAE,KAAKwC,YAAlD;AAAgE,MAAA,MAAM,EAAE,KAAKN,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AArFyC;;AAwF5C,eAAeH,aAAf","sourcesContent":["import React from 'react';\nimport Search from './components/Search';\nimport Results from './components/Results';\n\nclass BookSearchApp extends React.Component {\n  state = {\n    store: [],\n    form: {\n      searchParameter: null,\n      printType: 'all',\n      bookType: 'noFilter',\n    },\n  }\n\n  fetchData = () => {\n    const URL = 'https://www.googleapis.com/books/v1/volumes?';\n    let endUrl = [];\n    if (this.state.form.searchParameter) {\n      endUrl.push(`q={${this.state.form.searchParameter}}`);\n      endUrl.push(`printType=${this.state.form.printType}`);\n      if (this.state.form.bookType !== 'noFilter') {\n        endUrl.push(`filter=${this.state.form.bookType}`);\n      }\n      let finalUrl = endUrl.join('&');\n      fetch(URL + finalUrl)\n        .then(res => {\n          return res.json()\n        })\n        .then(res => {\n          if (res.error) {\n            throw res\n          }\n          if (res.totalItems === 0) {\n            this.setState({\n              error: 'No items found'\n            })\n            return [];\n          } else {\n            const newData = res.items.map(book => {\n              return {\n                title: book.volumeInfo.title,\n                author: (book.volumeInfo.authors ? book.volumeInfo.authors.join(' ') : 'No Author Information'),\n                price: (book.saleInfo.listPrice ? book.saleInfo.listPrice.amount : 0),\n                description: book.volumeInfo.description,\n                thumbnail: book.volumeInfo.imageLinks.smallThumbnail,\n              }\n            })\n            return newData;\n          }\n        })\n        .then(data => {\n          this.setState({\n            store: data\n          })\n        })\n    }\n  }\n\n  search = (event) => {\n    event.preventDefault();\n\n    let newForm = { ...this.state.form };\n    newForm.searchParameter = event.target[0].value;\n    event.target[0].value = '';\n\n    this.setState({\n      form: newForm\n    }, () => this.fetchData());\n  }\n\n  changeFilter = (type, value) => {\n    let changedForm = { ...this.state.form };\n    changedForm[type] = value;\n\n    this.setState({\n      form: changedForm\n    }, () => this.fetchData());\n  }\n\n  render() {\n\n    return (\n      <main className='App'>\n        <h1>Google Book Search</h1>\n        <h2>{this.state.error}</h2>\n        <Search form={this.state.form} changeFilter={this.changeFilter} search={this.search} />\n        <Results store={this.state.store} />\n      </main>\n    );\n  }\n}\n\nexport default BookSearchApp;"]},"metadata":{},"sourceType":"module"}